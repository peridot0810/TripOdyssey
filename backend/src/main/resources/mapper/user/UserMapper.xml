<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.pjt.user.mapper.UserMapper">

	<!-- 유저 조회 -->
    <select id="findByEmail">
        SELECT id, email, pw, nickname, gender, age, role, activated 
        FROM user
        WHERE email = #{email}
    </select>
    
    <select id="findById">
        SELECT id, email, pw, nickname, gender, age, role, activated
        FROM user
        WHERE id = #{userId}
    </select>
    
    <select id="getUserInfo">
    	SELECT email, gender, age, leader_exp, schedule_exp, finance_exp, logistics_exp, member_exp
    	FROM user u
    		INNER JOIN user_experience e 
    		ON (u.id = e.user_id) 
    	WHERE u.id = #{userId}
    </select>
    
    <!-- 유저 삽입 -->
    <insert id="insertUser">
    	INSERT INTO user(id, email, pw, nickname, gender, age)
    	VALUES(#{id},#{email},#{pw},#{nickname},#{gender},#{age})
    </insert>
    
    <insert id="insertUserExp">
    	INSERT INTO user_experience(user_id)
		VALUES(#{userId});
    </insert>
    
    <!-- 유저 삭제 -->
    <delete id="deleteUser">
    	DELETE FROM user
    	WHERE id=#{userId}
    </delete>
    
    
    <!-- 유저 정보 수정 -->
    <update id="editPassword">
    	UPDATE user
    	SET pw = #{newPassword}
    	WHERE id = #{id}
    </update>
    
    <update id="editUserInfo">
    	UPDATE user
	    <set>
	        <if test="newNickname != null">
	            nickname = #{newNickname},
	        </if>
	        <if test="newAge != null">
	            age = #{newAge},
	        </if>
	    </set>
	    WHERE id = #{id}
    </update>
    
    
    <!-- 유저 활성화/비활성화 -->
    <update id="activateUser">
		UPDATE user
		SET activated=1
		WHERE id=#{userId}    
    </update>
    
    <update id="deactivateUser">
    	UPDATE user
		SET activated=0
		WHERE id=#{userId}
    </update>

    
    
    <!-- 중복 확인 -->
    <select id="checkEmailExists">
    	SELECT EXISTS (
    		SELECT 1 FROM user 
    		WHERE email = #{email}
    	)
    </select>
    
    <select id="checkIdExists">
    	SELECT EXISTS (
    		SELECT 1 FROM user 
    		WHERE id = #{userId}
    	)
    </select>
    
    
    <!-- 그룹 조회 -->
    <select id="getGroupList">
    	SELECT group_id, name, created_at, status, start_date, end_date, profile_image
    	FROM group_user_info gui
    		INNER JOIN travel_group tg USING (group_id)
    	WHERE user_id=#{userId}
    	GROUP BY group_id
    </select>
    
    <select id="getGroupProgress">
    	SELECT * 
    	FROM group_progress
    	WHERE group_id=#{groupId}
    </select>
    
    <select id="getMyRoleInGroup">
    	SELECT name
    	FROM group_user_info gui
    		INNER JOIN role r USING (role_id)
    	WHERE user_id=#{userId} AND group_id=#{groupId}
    </select>
    
    <select id="getMemberCntInGroup">
    	SELECT COUNT(*)
    	FROM (
			SELECT user_id, group_id FROM group_user_info
            WHERE group_id = #{groupId}
            GROUP BY user_id
        ) as T
        GROUP BY group_id;
    </select>
    
	<update id="updateProfileImage">
		UPDATE user
		SET profile_image = #{imageUrl}
		WHERE id=#{userId}
	</update>
	
	
	<select id="getInvitationList">
	    SELECT 
	        inv.id AS invitation_id,
	        tg.group_id AS group_id,
	        tg.name AS groupName,
	        inv.sender_id AS sender_id,
	        u.nickname AS sender_nickname,
	        inv.status AS status,
	        inv.created_at AS created_at,
	        inv.responded_at AS responded_at
	    FROM invitation inv
	        JOIN travel_group tg USING (group_id)
	        JOIN user u ON inv.sender_id = u.id
	    WHERE inv.receiver_email = #{userEmail}
	</select>
	
	<update id="handleInvitation">
		UPDATE invitation
		SET
			status= 
				<choose>
					<when test="accept==true">'ACCEPTED'</when>
					<otherwise>'REJECTED'</otherwise>
				</choose>,
			responded_at = NOW()
		WHERE receiver_email=#{receiverEmail}
			AND group_id = #{groupId}
	</update>
	
	
	
	
	
	
</mapper>