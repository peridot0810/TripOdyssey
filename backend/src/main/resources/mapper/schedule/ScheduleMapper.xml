<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.pjt.schedule.mapper.ScheduleMapper">

	<insert id="addScheduleProposal" useGeneratedKeys="true" keyProperty="proposalId">
		INSERT INTO schedule_proposal(group_id, user_id, attractions_no)
		VALUES(#{groupId},#{userId},#{attractionsNo})
	</insert>
	
	<insert id="likeProposal">
		INSERT INTO proposal_like(user_id, proposal_id)
		VALUES(#{userId}, #{proposalId})
	</insert>
	
	<delete id="unlikeProposal">
		DELETE FROM proposal_like
		WHERE proposal_id=#{proposalId} AND user_id=#{userId}
	</delete>
	
	
	<insert id="addContent" useGeneratedKeys="true" keyProperty="contentId">
		INSERT INTO content(name, description, attractions_no)
		VALUES(#{name}, #{description}, #{attractionNo})
	</insert>
	
	<update id="updateContent">
		UPDATE content
		<set>
		    <if test="name != null">
		        name = #{name},
		    </if>
		    <if test="description != null">
		        description = #{description},
		    </if>
		    <if test="attractionNo != null">
		        attractions_no = #{attractionNo},
		    </if>
		</set>
		WHERE content_id = #{contentId}
	</update>
	
	<delete id="deleteContent">
		DELETE FROM content
		WHERE content_id=#{contentId}
	</delete>
	
	<insert id="addSchedule">
		INSERT INTO schedule(content_id, group_id)
		VALUES(#{contentId}, #{groupId})
	</insert>
	
	<select id="getProposalList">
		SELECT user_id, 
				proposal_id, 
				group_id, 
				no, 
				title, 
				content_type_name, 
				first_image1, 
				first_image2, 
				latitude, 
				longitude, 
				tel, 
				addr1, 
				addr2, 
				homepage, 
				overview,
				likes,
				
				CASE 
			        WHEN EXISTS (
			            SELECT 1 
			            FROM proposal_like pl2 
			            WHERE pl2.proposal_id = sp.proposal_id AND pl2.user_id = #{userId}
			        )
			        THEN true
			        ELSE false
			    END AS user_liked
				
		FROM schedule_proposal sp
			JOIN attractions a ON (sp.attractions_no = a.no)
			JOIN contenttypes c USING (content_type_id)
			LEFT JOIN (
				SELECT proposal_id, COUNT(*) AS likes FROM proposal_like
			    GROUP BY proposal_id
			) likes USING(proposal_id)
		WHERE group_id=#{groupId}
	</select>
	
	<select id="getScheduleList">
		SELECT name, `order`, day, content_id, description, attractions_no, is_official
		FROM schedule s
			JOIN content c USING(content_id)
		WHERE group_id=#{groupId}
	</select>
	
	<select id="getAttractionInfo">
		SELECT 
			no, 
			title, 
			content_type_name, 
			first_image1, 
			first_image2, 
			latitude, 
			longitude, 
			tel, 
			addr1, 
			addr2, 
			homepage, 
			overview
		FROM attractions 
			JOIN contenttypes USING (content_type_id)
		WHERE no = #{attractionNo} 
	</select>
	
	<select id="getAttractionList">
		SELECT 
			no, 
			title, 
			content_type_name, 
			first_image1, 
			first_image2, 
			latitude, 
			longitude, 
			tel, 
			addr1, 
			addr2, 
			homepage, 
			overview
		FROM attractions 
			JOIN contenttypes USING (content_type_id)

		<where>
			<if test="sidoCode != null">
				AND area_code=#{sidoCode}
			</if>
			<if test="gugunCode != null">
				AND si_gun_gu_code=#{gugunCode}
			</if>
			<if test="contentTypeId != null">
				AND content_type_id=#{contentTypeId}
			</if>
			<if test="keyword != null and keyword != ''">
				AND ( title LIKE CONCAT('%', #{keyword}, '%') )
			</if>
		</where>
		ORDER BY no DESC
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	
	
	<update id="updateScheduleNew">
		<foreach collection="newScheduleList" item="schedule"  separator=";">
			UPDATE schedule
			SET 
				`order`=#{schedule.order}, 
				`day`=#{schedule.day},
				is_official='1'
			WHERE content_id=#{schedule.contentId}
		</foreach>
		
		
	</update>
	
	<update id="updateScheduleModified">
		<foreach collection="modifiedScheduleList" item="schedule"  separator=";">
			UPDATE schedule
			SET
				`order`=#{schedule.order}, 
				`day`=#{schedule.day} 
			WHERE content_id=#{schedule.contentId}
		</foreach>
	</update>
	
	<update id="updateScheduleRemoved">
		<foreach collection="removedScheduleList" item="schedule" separator=";">
			UPDATE schedule
			SET `order`=NULL,
				`day`=NULL,
				is_official='0'
			WHERE content_id=#{schedule.contentId}	
		</foreach>
	</update>

</mapper>